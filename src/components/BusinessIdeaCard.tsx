import React, { useState } from 'react';
import { BusinessIdea } from '../types';
import { useAuthStore } from '../store/authStore';
import { BusinessIdeasService } from '../services/api';
import toast from 'react-hot-toast';
import { 
  TrendingUp, 
  MapPin, 
  Lightbulb,
  Target,
  Building,
  Zap,
  Save,
  Share2,
  Download,
  BarChart3,
  Star,
  Brain,
  Sparkles,
  CheckCircle,
  AlertTriangle,
  Info
} from 'lucide-react';

interface BusinessIdeaCardProps {
  idea: BusinessIdea;
}

const BusinessIdeaCard: React.FC<BusinessIdeaCardProps> = ({ idea }) => {
  const { isAuthenticated, checkFeatureAccess } = useAuthStore();
  const [isSaving, setIsSaving] = useState(false);
  const [isSaved, setIsSaved] = useState(false);
  const [showFullDescription, setShowFullDescription] = useState(false);
  const [activeTab, setActiveTab] = useState<'overview' | 'analysis' | 'recommendations'>('overview');

  const formatCurrency = (amount: number) => {
    return new Intl.NumberFormat('en-US', {
      style: 'currency',
      currency: 'USD',
      minimumFractionDigits: 0,
      maximumFractionDigits: 0,
    }).format(amount);
  };

  const handleSaveIdea = async () => {
    if (!isAuthenticated) {
      toast.error('Please sign in to save ideas');
      return;
    }

    setIsSaving(true);
    try {
      await BusinessIdeasService.saveIdea(idea.id);
      setIsSaved(true);
      toast.success('Idea saved successfully!');
    } catch (error: any) {
      toast.error(error.response?.data?.message || 'Failed to save idea');
    } finally {
      setIsSaving(false);
    }
  };

  const handleShareIdea = async () => {
    if (navigator.share) {
      try {
        await navigator.share({
          title: idea.title,
          text: idea.description,
          url: window.location.href
        });
      } catch (error) {
        // User cancelled sharing
      }
    } else {
      // Fallback: copy to clipboard
      const shareText = `${idea.title}\n\n${idea.description}\n\nGenerated by GetThis.Money`;
      navigator.clipboard.writeText(shareText);
      toast.success('Idea copied to clipboard!');
    }
  };

  const handleExportIdea = async () => {
    if (!isAuthenticated || !checkFeatureAccess('exportPDF')) {
      toast.error('PDF export is available for premium users');
      return;
    }

    try {
      const blob = await BusinessIdeasService.exportIdea(idea.id, 'pdf');
      const url = window.URL.createObjectURL(blob);
      const a = document.createElement('a');
      a.style.display = 'none';
      a.href = url;
      a.download = `${idea.title.replace(/[^a-z0-9]/gi, '_').toLowerCase()}_business_idea.pdf`;
      document.body.appendChild(a);
      a.click();
      window.URL.revokeObjectURL(url);
      toast.success('Business idea exported successfully!');
    } catch (error: any) {
      toast.error(error.response?.data?.message || 'Failed to export idea');
    }
  };

  const isAIGenerated = (idea as any).isAIGenerated !== false; // Default to true unless explicitly false

  return (
    <div className="glass-effect rounded-lg p-8 max-w-6xl mx-auto animate-fade-in">
      {/* Header with AI Badge */}
      <div className="text-center mb-8">
        <div className="flex justify-center items-center mb-4">
          {isAIGenerated && (
            <div className="bg-gradient-to-r from-purple-500 to-pink-500 text-white px-3 py-1 rounded-full text-sm font-medium flex items-center mr-4">
              <Brain className="h-4 w-4 mr-1" />
              AI Generated
            </div>
          )}
          <div className="flex items-center space-x-2">
            <Star className="h-5 w-5 text-yellow-400" />
            <Star className="h-5 w-5 text-yellow-400" />
            <Star className="h-5 w-5 text-yellow-400" />
            <Star className="h-5 w-5 text-yellow-400" />
            <Star className="h-5 w-5 text-gray-400" />
          </div>
        </div>
        
        <h2 className="text-4xl font-bold text-white mb-4">{idea.title}</h2>
        
        <div className="relative">
          <p className="text-gray-300 text-lg leading-relaxed max-w-4xl mx-auto">
            {showFullDescription ? idea.description : `${idea.description.substring(0, 200)}...`}
          </p>
          <button
            onClick={() => setShowFullDescription(!showFullDescription)}
            className="text-blue-400 hover:text-blue-300 text-sm mt-2 transition-colors"
          >
            {showFullDescription ? 'Show less' : 'Read more'}
          </button>
        </div>
      </div>

      {/* Action Buttons */}
      <div className="flex flex-wrap justify-center gap-4 mb-8">
        <button
          onClick={handleSaveIdea}
          disabled={isSaving || isSaved}
          className={`flex items-center space-x-2 px-6 py-3 rounded-lg font-semibold transition-all duration-200 ${
            isSaved
              ? 'bg-green-500 text-white'
              : 'bg-gradient-to-r from-blue-500 to-purple-600 text-white hover:from-blue-600 hover:to-purple-700 transform hover:scale-105'
          }`}
        >
          {isSaving ? (
            <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-white"></div>
          ) : isSaved ? (
            <CheckCircle className="h-4 w-4" />
          ) : (
            <Save className="h-4 w-4" />
          )}
          <span>{isSaved ? 'Saved!' : 'Save Idea'}</span>
        </button>
        
        <button
          onClick={handleShareIdea}
          className="flex items-center space-x-2 bg-white/10 border border-white/20 text-white px-6 py-3 rounded-lg font-semibold hover:bg-white/20 transition-all duration-200"
        >
          <Share2 className="h-4 w-4" />
          <span>Share</span>
        </button>
        
        <button
          onClick={handleExportIdea}
          className="flex items-center space-x-2 bg-white/10 border border-white/20 text-white px-6 py-3 rounded-lg font-semibold hover:bg-white/20 transition-all duration-200"
        >
          <Download className="h-4 w-4" />
          <span>Export PDF</span>
        </button>
      </div>

      {/* Tabs */}
      <div className="flex justify-center mb-6">
        <div className="bg-white/10 rounded-lg p-1 flex space-x-1">
          {[
            { id: 'overview', label: 'Overview', icon: <Info className="h-4 w-4" /> },
            { id: 'analysis', label: 'Market Analysis', icon: <BarChart3 className="h-4 w-4" /> },
            { id: 'recommendations', label: 'AI Insights', icon: <Sparkles className="h-4 w-4" /> }
          ].map((tab) => (
            <button
              key={tab.id}
              onClick={() => setActiveTab(tab.id as any)}
              className={`flex items-center space-x-2 px-4 py-2 rounded-md font-medium text-sm transition-all duration-200 ${
                activeTab === tab.id
                  ? 'bg-white/20 text-white'
                  : 'text-gray-300 hover:text-white hover:bg-white/10'
              }`}
            >
              {tab.icon}
              <span>{tab.label}</span>
            </button>
          ))}
        </div>
      </div>

      {/* Tab Content */}
      {activeTab === 'overview' && (
        <div className="space-y-8">
          {/* Revenue Estimates */}
          <div className="bg-gradient-to-r from-green-500/20 to-emerald-500/20 rounded-lg p-6 border border-green-500/30">
            <h3 className="text-2xl font-semibold text-white mb-6 flex items-center">
              <TrendingUp className="h-6 w-6 mr-2 text-green-400" />
              Revenue Estimates
            </h3>
            <div className="grid grid-cols-2 lg:grid-cols-5 gap-4">
              <div className="bg-white/10 rounded-lg p-4 text-center">
                <div className="text-2xl font-bold text-green-400">{formatCurrency(idea.revenueEstimates.daily)}</div>
                <div className="text-sm text-gray-300">Per Day</div>
              </div>
              <div className="bg-white/10 rounded-lg p-4 text-center">
                <div className="text-2xl font-bold text-green-400">{formatCurrency(idea.revenueEstimates.weekly)}</div>
                <div className="text-sm text-gray-300">Per Week</div>
              </div>
              <div className="bg-white/10 rounded-lg p-4 text-center">
                <div className="text-2xl font-bold text-green-400">{formatCurrency(idea.revenueEstimates.monthly)}</div>
                <div className="text-sm text-gray-300">Per Month</div>
              </div>
              <div className="bg-white/10 rounded-lg p-4 text-center">
                <div className="text-2xl font-bold text-green-400">{formatCurrency(idea.revenueEstimates.quarterly)}</div>
                <div className="text-sm text-gray-300">Per Quarter</div>
              </div>
              <div className="bg-white/10 rounded-lg p-4 text-center">
                <div className="text-2xl font-bold text-green-400">{formatCurrency(idea.revenueEstimates.yearly)}</div>
                <div className="text-sm text-gray-300">Per Year</div>
              </div>
            </div>
          </div>

          {/* Business Details Grid */}
          <div className="grid lg:grid-cols-2 gap-6">
            {/* Left Column */}
            <div className="space-y-6">
              <div className="bg-white/10 rounded-lg p-6">
                <h4 className="text-xl font-semibold text-white mb-4 flex items-center">
                  <Building className="h-5 w-5 mr-2 text-blue-400" />
                  Business Details
                </h4>
                <div className="space-y-3">
                  <div className="flex justify-between items-center">
                    <span className="text-gray-300">Industry:</span>
                    <span className="text-white font-medium">{idea.industry}</span>
                  </div>
                  <div className="flex justify-between items-center">
                    <span className="text-gray-300">Target Market:</span>
                    <span className="text-white font-medium">{idea.targetMarket}</span>
                  </div>
                  <div className="flex justify-between items-center">
                    <span className="text-gray-300">Revenue Model:</span>
                    <span className="text-white font-medium">{idea.revenueModel}</span>
                  </div>
                  <div className="flex justify-between items-center">
                    <span className="text-gray-300">Startup Cost:</span>
                    <span className="text-white font-medium">{idea.startupCost}</span>
                  </div>
                  <div className="flex justify-between items-center">
                    <span className="text-gray-300">Timeline:</span>
                    <span className="text-white font-medium">{idea.timeline}</span>
                  </div>
                </div>
              </div>

              <div className="bg-white/10 rounded-lg p-6">
                <h4 className="text-xl font-semibold text-white mb-4 flex items-center">
                  <MapPin className="h-5 w-5 mr-2 text-purple-400" />
                  Location & Tax Analysis
                </h4>
                <div className="space-y-3">
                  <div className="flex justify-between items-center">
                    <span className="text-gray-300">State:</span>
                    <span className="text-white font-medium">{idea.state}</span>
                  </div>
                  <p className="text-gray-300 text-sm leading-relaxed">{idea.taxImplications}</p>
                </div>
              </div>
            </div>

            {/* Right Column */}
            <div className="space-y-6">
              <div className="bg-gradient-to-r from-blue-500/20 to-purple-500/20 rounded-lg p-6 border border-blue-500/30">
                <h4 className="text-xl font-semibold text-white mb-4 flex items-center">
                  <Target className="h-5 w-5 mr-2 text-green-400" />
                  Success Strategy
                </h4>
                <div className="space-y-3 text-sm">
                  <p className="text-gray-300">
                    • Focus on your target market: <span className="text-white font-medium">{idea.targetMarket}</span>
                  </p>
                  <p className="text-gray-300">
                    • Leverage the {idea.industry} growth potential
                  </p>
                  <p className="text-gray-300">
                    • Start with {idea.startupCost} investment
                  </p>
                  <p className="text-gray-300">
                    • Aim for {formatCurrency(idea.revenueEstimates.monthly)} monthly revenue
                  </p>
                </div>
              </div>

              {isAIGenerated && (
                <div className="bg-gradient-to-r from-purple-500/20 to-pink-500/20 rounded-lg p-6 border border-purple-500/30">
                  <h4 className="text-xl font-semibold text-white mb-4 flex items-center">
                    <Brain className="h-5 w-5 mr-2 text-purple-400" />
                    AI Quality Score
                  </h4>
                  <div className="space-y-4">
                    <div className="flex justify-between items-center">
                      <span className="text-gray-300">Market Viability:</span>
                      <div className="flex space-x-1">
                        {[1, 2, 3, 4, 5].map((star) => (
                          <Star key={star} className={`h-4 w-4 ${star <= 4 ? 'text-yellow-400' : 'text-gray-400'}`} />
                        ))}
                      </div>
                    </div>
                    <div className="flex justify-between items-center">
                      <span className="text-gray-300">Implementation:</span>
                      <div className="flex space-x-1">
                        {[1, 2, 3, 4, 5].map((star) => (
                          <Star key={star} className={`h-4 w-4 ${star <= 4 ? 'text-yellow-400' : 'text-gray-400'}`} />
                        ))}
                      </div>
                    </div>
                    <div className="flex justify-between items-center">
                      <span className="text-gray-300">Revenue Potential:</span>
                      <div className="flex space-x-1">
                        {[1, 2, 3, 4, 5].map((star) => (
                          <Star key={star} className={`h-4 w-4 ${star <= 5 ? 'text-yellow-400' : 'text-gray-400'}`} />
                        ))}
                      </div>
                    </div>
                  </div>
                </div>
              )}
            </div>
          </div>
        </div>
      )}

      {activeTab === 'analysis' && (
        <div className="space-y-6">
          <div className="bg-white/10 rounded-lg p-6">
            <h3 className="text-2xl font-semibold text-white mb-4 flex items-center">
              <BarChart3 className="h-6 w-6 mr-2 text-blue-400" />
              Market Analysis
            </h3>
            <div className="grid md:grid-cols-2 gap-6">
              <div>
                <h4 className="text-lg font-semibold text-white mb-3">Market Size & Growth</h4>
                <div className="space-y-2 text-sm">
                  <p className="text-gray-300">The {idea.industry} market is experiencing strong growth with increasing demand for innovative solutions.</p>
                  <p className="text-gray-300">Target market size: <span className="text-white font-medium">$2.5B - $10B</span></p>
                  <p className="text-gray-300">Annual growth rate: <span className="text-green-400 font-medium">12-18%</span></p>
                </div>
              </div>
              <div>
                <h4 className="text-lg font-semibold text-white mb-3">Competition Level</h4>
                <div className="space-y-2 text-sm">
                  <div className="flex justify-between">
                    <span className="text-gray-300">Direct Competitors:</span>
                    <span className="text-yellow-400 font-medium">Moderate</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-gray-300">Market Saturation:</span>
                    <span className="text-green-400 font-medium">Low</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-gray-300">Entry Barriers:</span>
                    <span className="text-blue-400 font-medium">Medium</span>
                  </div>
                </div>
              </div>
            </div>
          </div>

          <div className="bg-white/10 rounded-lg p-6">
            <h4 className="text-lg font-semibold text-white mb-4">Risk Assessment</h4>
            <div className="space-y-3">
              <div className="flex items-start space-x-3">
                <AlertTriangle className="h-5 w-5 text-yellow-400 mt-1 flex-shrink-0" />
                <div>
                  <h5 className="text-white font-medium">Market Risks</h5>
                  <p className="text-gray-300 text-sm">Economic downturns could affect customer spending in this sector.</p>
                </div>
              </div>
              <div className="flex items-start space-x-3">
                <AlertTriangle className="h-5 w-5 text-blue-400 mt-1 flex-shrink-0" />
                <div>
                  <h5 className="text-white font-medium">Technology Risks</h5>
                  <p className="text-gray-300 text-sm">Rapid technological changes may require continuous adaptation.</p>
                </div>
              </div>
              <div className="flex items-start space-x-3">
                <CheckCircle className="h-5 w-5 text-green-400 mt-1 flex-shrink-0" />
                <div>
                  <h5 className="text-white font-medium">Mitigation Strategy</h5>
                  <p className="text-gray-300 text-sm">Diversify revenue streams and maintain strong customer relationships.</p>
                </div>
              </div>
            </div>
          </div>
        </div>
      )}

      {activeTab === 'recommendations' && (
        <div className="space-y-6">
          <div className="bg-gradient-to-r from-yellow-500/20 to-orange-500/20 rounded-lg p-6 border border-yellow-500/30">
            <h3 className="text-2xl font-semibold text-white mb-4 flex items-center">
              <Lightbulb className="h-6 w-6 mr-2 text-yellow-400" />
              AI Strategic Recommendations
            </h3>
            <div className="space-y-4">
              {idea.aiSuggestions.map((suggestion, index) => (
                <div key={index} className="flex items-start space-x-3">
                  <div className="bg-yellow-400 rounded-full p-1 mt-1">
                    <Zap className="h-3 w-3 text-yellow-900" />
                  </div>
                  <p className="text-gray-300 leading-relaxed">{suggestion}</p>
                </div>
              ))}
            </div>
          </div>

          {isAIGenerated && (
            <div className="bg-white/10 rounded-lg p-6">
              <h4 className="text-lg font-semibold text-white mb-4 flex items-center">
                <Sparkles className="h-5 w-5 mr-2 text-purple-400" />
                Next Steps
              </h4>
              <div className="grid md:grid-cols-2 gap-4">
                <div className="space-y-3">
                  <h5 className="text-white font-medium">Immediate Actions (Week 1-2)</h5>
                  <ul className="space-y-2 text-sm text-gray-300">
                    <li className="flex items-start space-x-2">
                      <div className="w-2 h-2 bg-green-400 rounded-full mt-2"></div>
                      <span>Validate the concept with potential customers</span>
                    </li>
                    <li className="flex items-start space-x-2">
                      <div className="w-2 h-2 bg-green-400 rounded-full mt-2"></div>
                      <span>Research direct competitors and pricing</span>
                    </li>
                    <li className="flex items-start space-x-2">
                      <div className="w-2 h-2 bg-green-400 rounded-full mt-2"></div>
                      <span>Create a basic business plan outline</span>
                    </li>
                  </ul>
                </div>
                <div className="space-y-3">
                  <h5 className="text-white font-medium">Medium-term Goals (Month 1-3)</h5>
                  <ul className="space-y-2 text-sm text-gray-300">
                    <li className="flex items-start space-x-2">
                      <div className="w-2 h-2 bg-blue-400 rounded-full mt-2"></div>
                      <span>Develop a minimum viable product (MVP)</span>
                    </li>
                    <li className="flex items-start space-x-2">
                      <div className="w-2 h-2 bg-blue-400 rounded-full mt-2"></div>
                      <span>Secure initial funding or investment</span>
                    </li>
                    <li className="flex items-start space-x-2">
                      <div className="w-2 h-2 bg-blue-400 rounded-full mt-2"></div>
                      <span>Build strategic partnerships</span>
                    </li>
                  </ul>
                </div>
              </div>
            </div>
          )}
        </div>
      )}

      {/* Disclaimer */}
      <div className="mt-8 bg-white/5 rounded-lg p-4 border-l-4 border-yellow-400">
        <div className="flex items-start space-x-3">
          <Info className="h-5 w-5 text-yellow-400 mt-1 flex-shrink-0" />
          <div>
            <h4 className="text-yellow-400 font-semibold text-sm">Important Disclaimer</h4>
            <p className="text-gray-400 text-xs mt-1 leading-relaxed">
              Revenue estimates are AI-generated projections based on industry averages and market conditions. 
              Actual results may vary significantly. Always conduct thorough market research, validate your assumptions, 
              and consult with business professionals before making investment decisions.
            </p>
          </div>
        </div>
      </div>
    </div>
  );
};

export default BusinessIdeaCard;
